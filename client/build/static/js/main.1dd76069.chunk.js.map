{"version":3,"sources":["Events.js","Graph.js","PlayerCard.js","App.js","index.js"],"names":["Events","props","displayEvent","events","map","e","react_default","a","createElement","className","length","Graph","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","state","graphParam","modified","data","d","date","split","accuracy","parseFloat","Math","round","toFixed","accAxis","YAxis","type","tick","fontSize","domain","dataMin","otherAxis","dataMax","checked","onChange","ResponsiveContainer","height","width","LineChart","margin","top","right","left","bottom","XAxis","interval","dataKey","CartesianGrid","stroke","fill","strokeDasharray","Tooltip","Line","strokeWidth","Component","PlayerCard","cleanText","ctext","replace","slice","join","_this2","filter","info","display_html","src","id","alt","pos","username","pp_raw","pp_rank","Date","join_date","toLocaleDateString","collapsed","onClick","getHistData","Graph_Graph","App","getActivity","_ref","asyncToGenerator","regenerator_default","mark","_callee","p","wrap","_context","prev","next","abrupt","fetch","then","json","stop","_x","apply","arguments","collapsedpid","toString","res","histData","getPlayers","eventFetch","forEach","push","Promise","all","dataArr","prom2","_ref2","_callee2","_context2","_x2","sort","b","user_id","i","pdata","handleClick","sortedBy","prevState","isReversed","sortPList","list","console","log","intervalIsSet","setInterval","clearInterval","loadingLabel","sortedList","revereseList","reverse","PlayerDisplay","PlayerCard_PlayerCard","key","style","fontWeight","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1dd76069.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Events(props) {\r\n    const displayEvent = props.events.map(e=>{\r\n        return <li>{e}</li>\r\n    })\r\n    return (\r\n        <div className=\"Feed\">\r\n            <ul>{props.events.length === 0? <li>No recent activity</li>: displayEvent}</ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\r\n\r\nexport default class Graph extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            graphParam:\"pp_rank\",\r\n        }\r\n    }\r\n\r\n    handleChange =(event)=>{\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const modified = this.props.data.map(d => {\r\n            d.date = d.date.split(\"T\")[0]\r\n            d.accuracy = parseFloat(Math.round(d.accuracy * 100) / 100).toFixed(2)\r\n            return d\r\n        })\r\n        const accAxis = <YAxis type=\"number\" tick={{ fontSize: 12 }} domain={[dataMin =>(Math.round(dataMin-3)) , 100]} />\r\n        const otherAxis = <YAxis type=\"number\" tick={{ fontSize: 12 }} domain={[dataMin =>(Math.round(dataMin*0.9)) , dataMax =>(Math.round(dataMax*1.1))]} />\r\n        return (\r\n            <div className=\"Graph\">\r\n                <div className=\"graphSelect\">\r\n                    <label>Graph Options:</label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"graphParam\"\r\n                            value=\"pp_rank\"\r\n                            checked={this.state.graphParam===\"pp_rank\"}\r\n                            onChange={this.handleChange}\r\n                        />Global Rank\r\n                </label>\r\n                <label>\r\n                    <input\r\n                            type=\"radio\"\r\n                            name=\"graphParam\"\r\n                            value=\"pp_raw\"\r\n                            checked={this.state.graphParam===\"pp_raw\"}\r\n                            onChange={this.handleChange}\r\n                        />PP\r\n                </label>\r\n                <label>\r\n                    <input\r\n                            type=\"radio\"\r\n                            name=\"graphParam\"\r\n                            value=\"accuracy\"\r\n                            checked={this.state.graphParam===\"accuracy\"}\r\n                            onChange={this.handleChange}\r\n                        />Accuracy\r\n                </label>\r\n                <label>\r\n                    <input\r\n                            type=\"radio\"\r\n                            name=\"graphParam\"\r\n                            value=\"playcount\"\r\n                            checked={this.state.graphParam===\"playcount\"}\r\n                            onChange={this.handleChange}\r\n                        />Playcount\r\n                </label>\r\n                </div>\r\n                <ResponsiveContainer height={200} width='100%'>\r\n                    <LineChart data={modified} margin={{ top: 5, right: 10, left: 0, bottom: 5 }}>\r\n                        <XAxis interval=\"preserveStart\" dataKey=\"date\" tick={{ fontSize: 10 }} />\r\n                        {this.state.graphParam===\"accuracy\"? accAxis:otherAxis}\r\n                        <CartesianGrid stroke=\"#909090\" fill='white' strokeDasharray=\"5 5\" />\r\n                        <Tooltip />\r\n                        <Line type=\"monotone\" strokeWidth={2} dataKey={this.state.graphParam} stroke=\"#ffa4b3\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react'\r\nimport Events from './Events.js'\r\nimport Graph from './Graph'\r\n\r\nexport default class PlayerCard extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state ={\r\n    }\r\n  }\r\n\r\n  cleanText=(event)=> {\r\n    let ctext = event.replace(/<\\/?[^>]+(>|$)/g, \"\");\r\n    ctext = ctext.split(\" \").slice(2).join(\" \")\r\n    return ctext\r\n  }\r\n\r\n  render() {\r\n    const filter = this.props.info.events.map(e => {\r\n      return this.cleanText(e.display_html)\r\n    })\r\n    return (\r\n      <div className=\"container\">\r\n      <div className=\"topRow\">\r\n        <div className=\"pCard\">\r\n          <div className=\"profpicCont\">\r\n            <img src={\"https://a.ppy.sh/\" + this.props.info.id} alt=\"avatar load fail\" />\r\n            <div className=\"topleft\">{this.props.pos}</div>\r\n          </div>\r\n          <div className=\"Stats\" >\r\n            <h3>{this.props.info.username}</h3>\r\n            <p>PP: {this.props.info.pp_raw}</p>\r\n            <p>Global Rank: {this.props.info.pp_rank}</p>\r\n            <p>Joined: {new Date(this.props.info.join_date).toLocaleDateString()}</p>\r\n          </div>\r\n          <div className=\"Activity\">\r\n            <Events events={filter}></Events>\r\n          </div>\r\n        </div>\r\n        <input className=\"toggle\"\r\n            type=\"image\" alt=\"toggleButton\"\r\n            src={this.props.collapsed ? \"/assets/up.png\" : \"/assets/down.png\"}\r\n            onClick={() => this.props.getHistData(this.props.info.id)}\r\n          />\r\n      </div>\r\n        {this.props.collapsed &&  <Graph data={this.props.data}/>}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PlayerCard from './PlayerCard'\r\n\r\nclass App extends Component {\r\n  // initialize our state \r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      pdata: [],\r\n      histData: [],\r\n      collapsedpid: -1, \r\n      sortedBy: \"recent\",\r\n      isReversed: false,\r\n      intervalIsSet: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPlayers();\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getPlayers, 900000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n   getActivity = async(p) => {\r\n      return fetch(\"https://osu.ppy.sh/api/get_user?k=259ac227b4133eddbb00cb52e15f47a635684f2e&u=\"+ p)\r\n      .then(data => data.json())\r\n      .then(data => {return data})\r\n  }\r\n\r\n  getHistData=(id)=>{\r\n    if (this.state.collapsedpid === id){\r\n      this.setState({ collapsedpid: -1 })\r\n    }else{\r\n      this.setState({ collapsedpid: id })\r\n    }\r\n    fetch(\"http://localhost:4000/api/getAllInfo/\"+id.toString())\r\n      .then(data => data.json())\r\n      .then(res => {\r\n        this.setState({ histData: res.data })\r\n      });\r\n  }\r\n\r\n  getPlayers = () => {\r\n    fetch(\"http://localhost:4000/api/getInfo\")\r\n      .then(data => data.json())\r\n      .then(res => {\r\n        let eventFetch = []\r\n        res.data.forEach(p => {\r\n          eventFetch.push(this.getActivity(p.id))\r\n        })\r\n        Promise.all(eventFetch)\r\n          .then(() => {\r\n            let dataArr = []\r\n            let prom2 = eventFetch.map(async (e) => {\r\n              e.then(e => dataArr.push(e[0]))\r\n            })\r\n            Promise.all(prom2).then(()=>{\r\n              res.data = res.data.sort((a,b)=>{return a.id-b.id})\r\n              dataArr = dataArr.sort((a,b)=>{return a.user_id-b.user_id})\r\n              for (let i=0; i<res.data.length;++i){\r\n                res.data[i].events=dataArr[i].events\r\n              }\r\n              this.setState({ pdata: res.data })\r\n              }\r\n            )\r\n          }\r\n          )\r\n      });\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    const { value } = e.target\r\n    if (value === this.state.sortedBy) {\r\n      this.setState(prevState =>{\r\n        return{isReversed: !prevState.isReversed}\r\n      })\r\n    } else {\r\n      this.setState({\r\n        sortedBy: value, isReversed: false\r\n      })\r\n    }\r\n  }\r\n\r\n  sortPList = (list) => {\r\n    const value = this.state.sortedBy\r\n    switch (value) {\r\n      case \"recent\":\r\n        return list.sort((a, b) => { return b.events.length - a.events.length })\r\n      case \"rank\":\r\n        return list.sort((a, b) => { return a.pp_rank - b.pp_rank })\r\n      case \"join_date\":\r\n        return list.sort((a, b) => { return new Date(a.join_date) - new Date(b.join_date) })\r\n      default:\r\n        console.log(\"test\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const loadingLabel = <h1>Loading...</h1>\r\n    const sortedList = this.sortPList(this.state.pdata)\r\n    const revereseList = this.state.isReversed? sortedList.reverse():sortedList;\r\n    let i = 0\r\n    const PlayerDisplay = revereseList.map(p=>{\r\n      i += 1\r\n      return <PlayerCard getHistData={this.getHistData}\r\n      key={i} info={p} pos={i}\r\n      collapsed={this.state.collapsedpid === p.id ? true:false}\r\n      data={this.state.collapsedpid === p.id ? this.state.histData : null }\r\n      />\r\n    })\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Waterloosu</h1>\r\n        <div className=\"PDisplay\">\r\n          <div className=\"SortPlayer\">\r\n            <label>{this.state.isReversed ? \"⯅\" : \"⯆\"} Sort By: </label>\r\n            <button value=\"recent\" onClick={this.handleClick}\r\n              style={this.state.sortedBy === \"recent\" ? { fontWeight: 'bolder' } : {}}>\r\n              Recently Active</button>\r\n            <button value=\"rank\" onClick={this.handleClick}\r\n              style={this.state.sortedBy === \"rank\" ? { fontWeight: 'bolder' } : {}}>\r\n              PP/Rank</button>\r\n            <button value=\"join_date\" onClick={this.handleClick}\r\n              style={this.state.sortedBy === \"join_date\" ? { fontWeight: 'bolder' } : {}}>\r\n              Join Date</button>\r\n          </div>\r\n          <div className=\"PInfo\">\r\n            {this.state.pdata.length === 0? loadingLabel : PlayerDisplay}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}